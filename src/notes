// import React, { useState } from "react";
// import { useSelector, useDispatch } from "react-redux";
// import { addTodo, deleteTodo, toggleComplete } from "./features/todoSlice";

// const Todo = () => {
//   const [text, setText] = useState("");
//   const todos = useSelector((state) => state.todos);
//   const dispatch = useDispatch();

//   const handleInputChange = (e) => {
//     setText(e.target.value);
//   };
//   const handleAddTodo = () => {
//     if (text) {
//       dispatch(addTodo(text));
//       setText("");
//     }
//   };
//   const handleToggleComplete = (id) => {
//     dispatch(toggleComplete(id));
//   };
//   const handleDeleteTodo = (id) => {
//     dispatch(deleteTodo(id));
//   };

//   return (
//     <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-200 to-purple-400 p-5">
//       <div className="w-full max-w-md bg-white bg-opacity-10 backdrop-blur-md rounded-2xl shadow-2xl p-8">
//         <h1 className="text-3xl font-bold text-white text-center mb-6">
//           My Todos
//         </h1>
//         <div className="flex items-center gap-4 mb-3">
//           <input
//             type="text"
//             value={text}
//             onChange={handleInputChange}
//             className="flex-1 bg-white bg-opacity-20 text-white placeholder-gray-200 rounded-lg py-3 px-4 focus:ring-2 focus:ring-indigo-400  focus:outline-none transition-all"
//             placeholder="Enter a new task..."
//           />
//           <button
//             onClick={handleAddTodo}
//             className="py-3 px-4 bg-indigo-300 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-400 active:scale-95 transition-transform"
//           >
//             Add
//           </button>
//         </div>
//         <ul className="space-y-4">
//           {todos.map((todo) => (
//             <li
//               key={todo.id}
//               className="flex justify-between items-center p-4 rounded-lg bg-white bg-opacity-20 shadow-md hover:bg-opacity-30 transition-all"
//             >
//               <span
//                 className={`text-lg text-black ${
//                   todo.completed ? "line-through text-gray-300" : "text-white"
//                 }`}
//               >
//                 {todo.text}
//               </span>
//               <div className="flex items-center gap-2">
//                 <button
//                   onClick={() => handleToggleComplete(todo.id)}
//                   className="px-3 py-1 bg-green-500 text-white rounded-lg hover:bg-green-600 active:scale-95 transition-transform"
//                 >
//                   {todo.completed ? "Undo" : "Done"}
//                 </button>
//                 <button
//                   onClick={() => handleDeleteTodo(todo.id)}
//                   className="px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 active:scale-95 transition-transform"
//                 >
//                   <i className="fa-solid fa-trash"></i>
//                 </button>
//               </div>
//             </li>
//           ))}
//         </ul>
//       </div>
//     </div>
//   );
// };
// export default Todo;

// import { useSelector, useDispatch } from "react-redux";
// import { increment, decrement } from "./features/counterSlice";
// function App() {
//   const count = useSelector((state) => state.counter.value);
//   const dispatch = useDispatch();
//   return (
//     <>
//       <button onClick={(e) => dispatch(increment())}>increment</button>
//       <h1>count: {count}</h1>
//       <button onClick={(e) => dispatch(decrement())}>decrement</button>
//     </>
//   );
// }

// import Swr from "./components/Swr";
// export default App;
// import Todo from "./Todo";
// import UseReducer from "./useReducer";
// import { useEffect, useState } from "react";
// import { getPosts, createPost, updatePost, deletePost } from "./api/fetchApi";
// import Postcard from "./components/Postcard";

// function App() {
//   const [data, setData] = useState([]);

//   // Function to create a new post
//   const addNewPost = async () => {
//     const newPost = {
//       title: "New Post",
//       body: "This is a new post. Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque, deserunt.",
//     };

//     try {
//       const response = await createPost(newPost);
//       console.log("Created Post:", response);
//       setData((prevData) => [response, ...prevData]); // Add the new post to the state
//     } catch (error) {
//       console.error("Error creating post:", error);
//     }
//   };

//   // Function to update an existing post
//   const editPost = async (id) => {
//     const updatedPost = {
//       title: "Updated Title",
//       body: "This is the updated content.",
//     };

//     try {
//       const post = await updatePost(id, updatedPost);
//       console.log("Updated post:", post);
//       setData((prevData) =>
//         prevData.map((item) => (item.id === id ? post : item))
//       );
//     } catch (error) {
//       console.error("Error updating post:", error);
//     }
//   };

//   // Fetch posts when the component mounts
//   const fetchPosts = async () => {
//     const posts = await getPosts();
//     setData(posts);
//   };
//   useEffect(() => {
//     fetchPosts();
//     editPost(8);
//   }, []);
//   useEffect(() => {
//     deletePost(10).then((success) => {
//       console.log("Deleted:", success);
//       fetchPosts();
//     });
//   }, []);

//   return (
//     <div className="flex flex-col items-center mt-5">
//       <button
//         className="bg-blue-300 hover:bg-blue-400 p-2 rounded-md"
//         onClick={addNewPost}
//       >
//         Add New Post
//       </button>
//       {/* Trigger to create a new post */}
//       <div className="grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 p-6">
//         {data.length > 0 ? (
//           data.map((e) => (
//             <Postcard key={e.id} title={e.title + e.id} body={e.body} />
//           ))
//         ) : (
//           <p>No data</p>
//         )}
//       </div>
//     </div>
//   );
// }

// export default App;
